[package]
name = "wasm-embedded-rt"
description = "Runtime for embedded-wasm applications"
repository = "https://github.com/embedded-wasm/rt"
documentation = "https://ryan.kurte.nz/embedded-wasm"
version = "0.1.1"
edition = "2018"
license = "MPL-2.0"

[features]
std = [ "thiserror", "strum", "strum_macros", "anyhow", "structopt", "log/std" ]

rt = [ "structopt", "strum", "strum_macros", "simplelog" ]
rt-wasm3 = [ "wasm-embedded-rt-wasm3", "wasm-embedded-spec/bind_c" ]
rt-wasmtime = [ "wasmtime", "wasmtime-wasi", "wiggle", "std", "wasm-embedded-spec/bind_rs" ]

hal-linux = [ "linux-embedded-hal", "std" ]
hal-mock = [ "embedded-hal-mock", "std", "serde", "serde_derive", "toml" ]

default = [ "rt", "rt-wasmtime", "rt-wasm3", "hal-linux", "hal-mock" ]

[dependencies]
embedded-hal = "1.0.0-alpha.5"
log = { version = "0.4.14", default_features = false }
wasm-embedded-spec = { version = "0.2.0", default_features = false }


# rt-wasmtime
wiggle = { version = "0.32.0", optional = true }
wasmtime = { version = "0.32.0", optional = true }
wasmtime-wasi = { version = "0.32.0", optional = true }

# rt-wasm3
wasm-embedded-rt-wasm3 = { version = "0.2.0", optional = true }

# error handling
thiserror = { version = "1.0.30", optional = true }
anyhow = { version = "1.0.41", optional = true }

# serialisation
serde = { version = "1.0.126", features = [ "derive" ], optional = true }
serde_derive = {version = "1.0.126", optional = true }

# CLI / logging / argument parsing
structopt = { version = "0.3.25", optional = true }
strum = { version = "0.21.0", optional = true }
strum_macros = { version = "0.21.1", optional = true }
simplelog = { version = "0.10.0", optional = true }

# hal-mock
embedded-hal-mock = { version = "0.7.2", optional = true }
toml = { version = "0.5.8", optional = true }

# hal-linux
linux-embedded-hal = { version = "0.4.0-alpha.1", optional = true }


[[bin]]
name = "wasm-embedded-rt"
path = "src/main.rs"
required-features = [ "rt" ]

[patch.crates-io]
#wasm-embedded-spec = { path = "../spec" }
#wasm-embedded-rt-wasm3 = { path = "../rt_wasm3" }

